{"ast":null,"code":"var _jsxFileName = \"/Users/user/dig_develop/solo_project/src/components/List.jsx\";\nimport \"../styles/list.css\";\nimport React from \"react\";\n// import React, { useState, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const List = () => {\n  const URL = process.env.NODE_ENV === \"production\" ?\n  //■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■\n  \"https://bb-master-revenge-front.onrender.com\" :\n  //■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■ここのリンクを変更すること■■■■■■■■■■■■■■■■■■■■■■\n  \"http://localhost:8080\";\n  const getDataFunc = () => {\n    fetch(`${URL}/table`, {\n      method: \"GET\"\n    }).then(res => res.json()).then(getData => {\n      getData.sort((a, b) => {\n        if (a.isWaiting === b.isWaiting) {\n          return a.id - b.id;\n        }\n        return b.isWaiting - a.isWaiting;\n      });\n      console.log(getData);\n      setItems(getData);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list\",\n    children: \"menu lists\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 10\n  }, this);\n};\n\n// // export const ItemField = (props) => {\n// //   const [items, setItems] = useState([]);\n// //   const [commntText, setComment] = useState(\"\");\n// //   const ref = useRef(\"\");\n\n//   // const URL =\n//   //   process.env.NODE_ENV === \"production\"\n//   //     ? \"https://bb-master-revenge-front.onrender.com\"\n//   //     : \"http://localhost:8080\";\n\n//   // let patchCheck;\n//   const getDataFunc = () => {\n//     // fetch(`${process.env.DATABASE_URL}/table`, { method: \"GET\" })\n//     fetch(`${URL}/table`, { method: \"GET\" })\n//       .then((res) => res.json())\n//       .then((getData) => {\n//         getData.sort((a, b) => {\n//           if (a.isWaiting === b.isWaiting) {\n//             return a.id - b.id;\n//           }\n//           return b.isWaiting - a.isWaiting;\n//         });\n//         console.log(getData);\n//         setItems(getData);\n//       });\n//   };\n\n//   // useEffect(() => {\n//   //   getDataFunc();\n//   // }, [patchCheck]);\n\n//   const clickAction = (e) => {\n//     const id = e.target.id;\n//     // const comment = document.getElementById(`input${id}`).value;\n//     const body = { id: id, comment: commntText };\n//     fetch(`${URL}/table/${id}`, {\n//       method: \"PATCH\",\n//       body: JSON.stringify(body),\n//       headers: {\n//         \"Content-type\": \"application/json; charset=UTF-8\",\n//       },\n//     })\n//       .then((res) => {\n//         if (res.ok) {\n//           patchCheck += 1;\n//         }\n//       })\n//       .then(() => getDataFunc());\n//   };\n\n//   const postClickAction = (e) => {\n//     const id = e.target.id;\n//     const body = {\n//       id: id,\n//       isWaiting: true,\n//       seller: \"運営\",\n//       comment: \"譲渡時キャンセルの為、再掲載\",\n//     };\n//     fetch(`${URL}/table`, {\n//       method: \"POST\",\n//       body: JSON.stringify(body),\n//       headers: {\n//         \"Content-type\": \"application/json; charset=UTF-8\",\n//       },\n//     })\n//       .then((res) => {\n//         if (res.ok) {\n//           patchCheck += 1;\n//         }\n//       })\n//       .then(() => getDataFunc());\n//   };\n\n//   const itemView = () => {\n//     const elementsArr = [];\n//     items.forEach((item, index) => {\n//       if (item.isWaiting === true) {\n//         elementsArr.push(\n//           <tr className=\"waiting\" key={index}>\n//             <td className=\"itemId\">{item.id}</td>\n//             <td className=\"itemName\">{item.item}</td>\n//             <td className=\"itemDescription\">{item.itemExp}</td>\n//             <td className=\"itemStatus\">\n//               譲渡可\"ﾉｼ\"\n//               <br />\n//             </td>\n//             <td className=\"request\">\n//               <label>\n//                 部屋番号・氏名・今日の日付を入力し、譲渡依頼してください\n//               </label>\n//               <br />\n//               <input\n//                 onChange={(e) => setComment(e.target.value)}\n//                 ref={ref}\n//                 id={`input${item.id}`}\n//                 className=\"comment\"\n//                 type=\"text\"\n//                 placeholder=\"※改行不可\"\n//                 required\n//               ></input>\n//               <button id={item.id} onClick={clickAction}>\n//                 譲渡依頼\n//               </button>\n//             </td>\n//           </tr>\n//         );\n//       } else if (item.isWaiting === false) {\n//         elementsArr.push(\n//           <tr className=\"done\" key={index}>\n//             <td className=\"itemId\">{item.id}</td>\n//             <td className=\"itemName\">{item.item}</td>\n//             <td className=\"itemDescription\">{item.itemExp}</td>\n//             <td className=\"itemStatus\">\n//               新しい持ち主のもとへ旅立ちました ﾉｼ\n//               <br />\n//               {item.comment}\n//             </td>\n//             <td className=\"request\">\n//               <label>譲渡時キャンセルボタン</label>\n//               <br />\n//               <input\n//                 onChange={(e) => setComment(e.target.value)}\n//                 ref={ref}\n//                 id={`input${item.id}`}\n//                 className=\"comment\"\n//                 type=\"text\"\n//                 placeholder=\"※改行不可\"\n//                 required\n//               ></input>\n//               <button id={item.id} onClick={postClickAction}>\n//                 データ復元\n//               </button>\n//             </td>\n//             <td className=\"request\"></td>\n//           </tr>\n//         );\n//       }\n//     });\n//     return elementsArr;\n//   };\n//   const resultElements = itemView();\n\n//   return resultElements;\n// };\n_c = List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","List","URL","process","env","NODE_ENV","getDataFunc","fetch","method","then","res","json","getData","sort","a","b","isWaiting","id","console","log","setItems","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/user/dig_develop/solo_project/src/components/List.jsx"],"sourcesContent":["import \"../styles/list.css\";\nimport React from \"react\";\n// import React, { useState, useEffect, useRef } from \"react\";\n\nexport const List = () => {\n  const URL =\n    process.env.NODE_ENV === \"production\"\n      ? //■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■\n        \"https://bb-master-revenge-front.onrender.com\"\n      : //■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■ここのリンクを変更すること■■■■■■■■■■■■■■■■■■■■■■\n        \"http://localhost:8080\";\n\n  const getDataFunc = () => {\n    fetch(`${URL}/table`, { method: \"GET\" })\n      .then((res) => res.json())\n      .then((getData) => {\n        getData.sort((a, b) => {\n          if (a.isWaiting === b.isWaiting) {\n            return a.id - b.id;\n          }\n          return b.isWaiting - a.isWaiting;\n        });\n        console.log(getData);\n        setItems(getData);\n      });\n  };\n\n  return <div className=\"list\">menu lists</div>;\n};\n\n// // export const ItemField = (props) => {\n// //   const [items, setItems] = useState([]);\n// //   const [commntText, setComment] = useState(\"\");\n// //   const ref = useRef(\"\");\n\n//   // const URL =\n//   //   process.env.NODE_ENV === \"production\"\n//   //     ? \"https://bb-master-revenge-front.onrender.com\"\n//   //     : \"http://localhost:8080\";\n\n//   // let patchCheck;\n//   const getDataFunc = () => {\n//     // fetch(`${process.env.DATABASE_URL}/table`, { method: \"GET\" })\n//     fetch(`${URL}/table`, { method: \"GET\" })\n//       .then((res) => res.json())\n//       .then((getData) => {\n//         getData.sort((a, b) => {\n//           if (a.isWaiting === b.isWaiting) {\n//             return a.id - b.id;\n//           }\n//           return b.isWaiting - a.isWaiting;\n//         });\n//         console.log(getData);\n//         setItems(getData);\n//       });\n//   };\n\n//   // useEffect(() => {\n//   //   getDataFunc();\n//   // }, [patchCheck]);\n\n//   const clickAction = (e) => {\n//     const id = e.target.id;\n//     // const comment = document.getElementById(`input${id}`).value;\n//     const body = { id: id, comment: commntText };\n//     fetch(`${URL}/table/${id}`, {\n//       method: \"PATCH\",\n//       body: JSON.stringify(body),\n//       headers: {\n//         \"Content-type\": \"application/json; charset=UTF-8\",\n//       },\n//     })\n//       .then((res) => {\n//         if (res.ok) {\n//           patchCheck += 1;\n//         }\n//       })\n//       .then(() => getDataFunc());\n//   };\n\n//   const postClickAction = (e) => {\n//     const id = e.target.id;\n//     const body = {\n//       id: id,\n//       isWaiting: true,\n//       seller: \"運営\",\n//       comment: \"譲渡時キャンセルの為、再掲載\",\n//     };\n//     fetch(`${URL}/table`, {\n//       method: \"POST\",\n//       body: JSON.stringify(body),\n//       headers: {\n//         \"Content-type\": \"application/json; charset=UTF-8\",\n//       },\n//     })\n//       .then((res) => {\n//         if (res.ok) {\n//           patchCheck += 1;\n//         }\n//       })\n//       .then(() => getDataFunc());\n//   };\n\n//   const itemView = () => {\n//     const elementsArr = [];\n//     items.forEach((item, index) => {\n//       if (item.isWaiting === true) {\n//         elementsArr.push(\n//           <tr className=\"waiting\" key={index}>\n//             <td className=\"itemId\">{item.id}</td>\n//             <td className=\"itemName\">{item.item}</td>\n//             <td className=\"itemDescription\">{item.itemExp}</td>\n//             <td className=\"itemStatus\">\n//               譲渡可\"ﾉｼ\"\n//               <br />\n//             </td>\n//             <td className=\"request\">\n//               <label>\n//                 部屋番号・氏名・今日の日付を入力し、譲渡依頼してください\n//               </label>\n//               <br />\n//               <input\n//                 onChange={(e) => setComment(e.target.value)}\n//                 ref={ref}\n//                 id={`input${item.id}`}\n//                 className=\"comment\"\n//                 type=\"text\"\n//                 placeholder=\"※改行不可\"\n//                 required\n//               ></input>\n//               <button id={item.id} onClick={clickAction}>\n//                 譲渡依頼\n//               </button>\n//             </td>\n//           </tr>\n//         );\n//       } else if (item.isWaiting === false) {\n//         elementsArr.push(\n//           <tr className=\"done\" key={index}>\n//             <td className=\"itemId\">{item.id}</td>\n//             <td className=\"itemName\">{item.item}</td>\n//             <td className=\"itemDescription\">{item.itemExp}</td>\n//             <td className=\"itemStatus\">\n//               新しい持ち主のもとへ旅立ちました ﾉｼ\n//               <br />\n//               {item.comment}\n//             </td>\n//             <td className=\"request\">\n//               <label>譲渡時キャンセルボタン</label>\n//               <br />\n//               <input\n//                 onChange={(e) => setComment(e.target.value)}\n//                 ref={ref}\n//                 id={`input${item.id}`}\n//                 className=\"comment\"\n//                 type=\"text\"\n//                 placeholder=\"※改行不可\"\n//                 required\n//               ></input>\n//               <button id={item.id} onClick={postClickAction}>\n//                 データ復元\n//               </button>\n//             </td>\n//             <td className=\"request\"></td>\n//           </tr>\n//         );\n//       }\n//     });\n//     return elementsArr;\n//   };\n//   const resultElements = itemView();\n\n//   return resultElements;\n// };\n"],"mappings":";AAAA,OAAO,oBAAoB;AAC3B,OAAOA,KAAK,MAAM,OAAO;AACzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,OAAO,MAAMC,IAAI,GAAGA,CAAA,KAAM;EACxB,MAAMC,GAAG,GACPC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY;EACjC;EACA,8CAA8C;EAC9C;EACA,uBAAuB;EAE7B,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBC,KAAK,CAAE,GAAEL,GAAI,QAAO,EAAE;MAAEM,MAAM,EAAE;IAAM,CAAC,CAAC,CACrCC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,OAAO,IAAK;MACjBA,OAAO,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QACrB,IAAID,CAAC,CAACE,SAAS,KAAKD,CAAC,CAACC,SAAS,EAAE;UAC/B,OAAOF,CAAC,CAACG,EAAE,GAAGF,CAAC,CAACE,EAAE;QACpB;QACA,OAAOF,CAAC,CAACC,SAAS,GAAGF,CAAC,CAACE,SAAS;MAClC,CAAC,CAAC;MACFE,OAAO,CAACC,GAAG,CAACP,OAAO,CAAC;MACpBQ,QAAQ,CAACR,OAAO,CAAC;IACnB,CAAC,CAAC;EACN,CAAC;EAED,oBAAOZ,OAAA;IAAKqB,SAAS,EAAC,MAAM;IAAAC,QAAA,EAAC;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAC/C,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAAC,EAAA,GAzKa1B,IAAI;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}