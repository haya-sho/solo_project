{"ast":null,"code":"function copyData(sourceTable, targetTable, columns) {\n  return `INSERT INTO \"${targetTable}\" SELECT ${columns === undefined ? '*' : columns.map(column => `\"${column}\"`).join(', ')} FROM \"${sourceTable}\";`;\n}\nfunction dropOriginal(tableName) {\n  return `DROP TABLE \"${tableName}\"`;\n}\nfunction renameTable(tableName, alteredName) {\n  return `ALTER TABLE \"${tableName}\" RENAME TO \"${alteredName}\"`;\n}\nfunction getTableSql(tableName) {\n  return `SELECT type, sql FROM sqlite_master WHERE (type='table' OR (type='index' AND sql IS NOT NULL)) AND tbl_name='${tableName}'`;\n}\nfunction isForeignCheckEnabled() {\n  return `PRAGMA foreign_keys`;\n}\nfunction setForeignCheck(enable) {\n  return `PRAGMA foreign_keys = ${enable ? 'ON' : 'OFF'}`;\n}\nfunction executeForeignCheck() {\n  return `PRAGMA foreign_key_check`;\n}\nmodule.exports = {\n  copyData,\n  dropOriginal,\n  renameTable,\n  getTableSql,\n  isForeignCheckEnabled,\n  setForeignCheck,\n  executeForeignCheck\n};","map":{"version":3,"names":["copyData","sourceTable","targetTable","columns","undefined","map","column","join","dropOriginal","tableName","renameTable","alteredName","getTableSql","isForeignCheckEnabled","setForeignCheck","enable","executeForeignCheck","module","exports"],"sources":["/Users/user/dig_develop/solo_project/node_modules/knex/lib/dialects/sqlite3/schema/internal/sqlite-ddl-operations.js"],"sourcesContent":["function copyData(sourceTable, targetTable, columns) {\n  return `INSERT INTO \"${targetTable}\" SELECT ${\n    columns === undefined\n      ? '*'\n      : columns.map((column) => `\"${column}\"`).join(', ')\n  } FROM \"${sourceTable}\";`;\n}\n\nfunction dropOriginal(tableName) {\n  return `DROP TABLE \"${tableName}\"`;\n}\n\nfunction renameTable(tableName, alteredName) {\n  return `ALTER TABLE \"${tableName}\" RENAME TO \"${alteredName}\"`;\n}\n\nfunction getTableSql(tableName) {\n  return `SELECT type, sql FROM sqlite_master WHERE (type='table' OR (type='index' AND sql IS NOT NULL)) AND tbl_name='${tableName}'`;\n}\n\nfunction isForeignCheckEnabled() {\n  return `PRAGMA foreign_keys`;\n}\n\nfunction setForeignCheck(enable) {\n  return `PRAGMA foreign_keys = ${enable ? 'ON' : 'OFF'}`;\n}\n\nfunction executeForeignCheck() {\n  return `PRAGMA foreign_key_check`;\n}\n\nmodule.exports = {\n  copyData,\n  dropOriginal,\n  renameTable,\n  getTableSql,\n  isForeignCheckEnabled,\n  setForeignCheck,\n  executeForeignCheck,\n};\n"],"mappings":"AAAA,SAASA,QAAQA,CAACC,WAAW,EAAEC,WAAW,EAAEC,OAAO,EAAE;EACnD,OAAQ,gBAAeD,WAAY,YACjCC,OAAO,KAAKC,SAAS,GACjB,GAAG,GACHD,OAAO,CAACE,GAAG,CAAEC,MAAM,IAAM,IAAGA,MAAO,GAAE,CAAC,CAACC,IAAI,CAAC,IAAI,CACrD,UAASN,WAAY,IAAG;AAC3B;AAEA,SAASO,YAAYA,CAACC,SAAS,EAAE;EAC/B,OAAQ,eAAcA,SAAU,GAAE;AACpC;AAEA,SAASC,WAAWA,CAACD,SAAS,EAAEE,WAAW,EAAE;EAC3C,OAAQ,gBAAeF,SAAU,gBAAeE,WAAY,GAAE;AAChE;AAEA,SAASC,WAAWA,CAACH,SAAS,EAAE;EAC9B,OAAQ,gHAA+GA,SAAU,GAAE;AACrI;AAEA,SAASI,qBAAqBA,CAAA,EAAG;EAC/B,OAAQ,qBAAoB;AAC9B;AAEA,SAASC,eAAeA,CAACC,MAAM,EAAE;EAC/B,OAAQ,yBAAwBA,MAAM,GAAG,IAAI,GAAG,KAAM,EAAC;AACzD;AAEA,SAASC,mBAAmBA,CAAA,EAAG;EAC7B,OAAQ,0BAAyB;AACnC;AAEAC,MAAM,CAACC,OAAO,GAAG;EACflB,QAAQ;EACRQ,YAAY;EACZE,WAAW;EACXE,WAAW;EACXC,qBAAqB;EACrBC,eAAe;EACfE;AACF,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}