{"ast":null,"code":"var _jsxFileName = \"/Users/user/dig_develop/solo_project/src/components/List.jsx\",\n  _s = $RefreshSig$();\nimport \"../styles/list.css\";\nimport { React, useState, useEffect } from \"react\";\n// import React, { useState, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const List = props => {\n  _s();\n  const URL = process.env.NODE_ENV === \"production\" ?\n  //■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■\n  \"https://choose-lunch-app.onrender.com\" :\n  //■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■ここのリンクを変更すること■■■■■■■■■■■■■■■■■■■■■■\n  \"http://localhost:8080\";\n  const [menu, menuSet] = useState([]);\n  const getDataFunc = () => {\n    fetch(`${URL}/table`, {\n      method: \"GET\"\n    }).then(res => res.json()).then(getData => {\n      menuSet(getData);\n    });\n  };\n\n  // let patchCheck;\n\n  //これを入れないと永遠にループする\n  useEffect(() => {\n    getDataFunc();\n  }, []);\n\n  // const DataSort = () => {\n  //   fetch(`${URL}/table`, { method: \"GET\" })\n  //     .then((res) => res.json())\n  //     .then((getData) => {\n  //       menuSet(getData);\n  //     });\n  // };\n  console.log(process.env);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list\",\n      children: [\"menu lists\", /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: menu.map(menu => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: menu.menu\n        }, menu.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(List, \"K54vZzr6kBtNXdOy5UK5dKFldk0=\");\n_c = List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","List","props","_s","URL","process","env","NODE_ENV","menu","menuSet","getDataFunc","fetch","method","then","res","json","getData","console","log","children","className","map","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/user/dig_develop/solo_project/src/components/List.jsx"],"sourcesContent":["import \"../styles/list.css\";\nimport { React, useState, useEffect } from \"react\";\n// import React, { useState, useEffect, useRef } from \"react\";\n\nexport const List = (props) => {\n  const URL =\n    process.env.NODE_ENV === \"production\"\n      ? //■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■\n        \"https://choose-lunch-app.onrender.com\"\n      : //■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■ここのリンクを変更すること■■■■■■■■■■■■■■■■■■■■■■\n        \"http://localhost:8080\";\n\n  const [menu, menuSet] = useState([]);\n\n  const getDataFunc = () => {\n    fetch(`${URL}/table`, { method: \"GET\" })\n      .then((res) => res.json())\n      .then((getData) => {\n        menuSet(getData);\n      });\n  };\n\n  // let patchCheck;\n\n  //これを入れないと永遠にループする\n  useEffect(() => {\n    getDataFunc();\n  }, []);\n\n  // const DataSort = () => {\n  //   fetch(`${URL}/table`, { method: \"GET\" })\n  //     .then((res) => res.json())\n  //     .then((getData) => {\n  //       menuSet(getData);\n  //     });\n  // };\n  console.log(process.env);\n  return (\n    <>\n      <div className=\"list\">\n        menu lists\n        <ul>\n          {menu.map((menu) => (\n            <li key={menu.id}>{menu.menu}</li>\n          ))}\n        </ul>\n      </div>\n    </>\n  );\n};\n"],"mappings":";;AAAA,OAAO,oBAAoB;AAC3B,SAASA,KAAK,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEA,OAAO,MAAMC,IAAI,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC7B,MAAMC,GAAG,GACPC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY;EACjC;EACA,uCAAuC;EACvC;EACA,uBAAuB;EAE7B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMe,WAAW,GAAGA,CAAA,KAAM;IACxBC,KAAK,CAAE,GAAEP,GAAI,QAAO,EAAE;MAAEQ,MAAM,EAAE;IAAM,CAAC,CAAC,CACrCC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,OAAO,IAAK;MACjBP,OAAO,CAACO,OAAO,CAAC;IAClB,CAAC,CAAC;EACN,CAAC;;EAED;;EAEA;EACApB,SAAS,CAAC,MAAM;IACdc,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;EACA;EACA;EACA;EACA;EACA;EACAO,OAAO,CAACC,GAAG,CAACb,OAAO,CAACC,GAAG,CAAC;EACxB,oBACER,OAAA,CAAAE,SAAA;IAAAmB,QAAA,eACErB,OAAA;MAAKsB,SAAS,EAAC,MAAM;MAAAD,QAAA,GAAC,YAEpB,eAAArB,OAAA;QAAAqB,QAAA,EACGX,IAAI,CAACa,GAAG,CAAEb,IAAI,iBACbV,OAAA;UAAAqB,QAAA,EAAmBX,IAAI,CAACA;QAAI,GAAnBA,IAAI,CAACc,EAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAiB,CAClC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC,gBACN,CAAC;AAEP,CAAC;AAACvB,EAAA,CA7CWF,IAAI;AAAA0B,EAAA,GAAJ1B,IAAI;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}