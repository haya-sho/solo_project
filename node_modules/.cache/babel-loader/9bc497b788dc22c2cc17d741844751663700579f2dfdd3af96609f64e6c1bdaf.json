{"ast":null,"code":"var _jsxFileName = \"/Users/user/dig_develop/solo_project/src/components/List.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport \"../styles/list.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const URL = process.env.NODE_ENV === \"production\" ?\n//■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■\n\"https://choose-lunch-app.onrender.com\" :\n//■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■ここのリンクを変更すること■■■■■■■■■■■■■■■■■■■■■■\n\"http://localhost:8080\";\nconst List = props => {\n  _s();\n  //この関数を実行すると指定したURLにGETリクエストを送る\n  const getDataFunc = async () => {\n    fetch(`${URL}/table`, {\n      method: \"GET\"\n    }).then(res => res.json()).then(getData => {\n      props.allMenuSet(getData);\n      //allMenuをgetDataとする\n      //全てのオブジェクトが入った配列\n    });\n  };\n\n  // let patchCheck;\n\n  //これを入れないと永遠にループする\n  useEffect(() => {\n    getDataFunc(props.allMenuSet);\n  }, []);\n  console.log(props.allMenu);\n  const menuView = () => {\n    const elementsArr = [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"method\",\n      children: [\"Let's choose!!\", /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"rice\",\n        onClick: riceClickAction,\n        children: \"\\u3054\\u306F\\u3093\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"pasta\",\n        onClick: pastaClickAction,\n        children: \"\\u30D1\\u30B9\\u30BF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"reset\",\n        onClick: resetAction,\n        children: \"\\u5168\\u3066\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: randomImage,\n          alt: \"random\",\n          onClick: myFunction\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)];\n    //allMenuはオブジェクトが入った配列\n    props.allMenu.forEach(value => {\n      if (value.isWaiting === true) {\n        console.log(value);\n        elementsArr.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list\",\n          children: [\"menu lists\", /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              children: value.menu\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, value.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this));\n      }\n    });\n    return elementsArr;\n  };\n  const resultElements = menuView();\n  return resultElements;\n};\n_s(List, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","URL","process","env","NODE_ENV","List","props","_s","getDataFunc","fetch","method","then","res","json","getData","allMenuSet","console","log","allMenu","menuView","elementsArr","className","children","id","onClick","riceClickAction","fileName","_jsxFileName","lineNumber","columnNumber","pastaClickAction","resetAction","src","randomImage","alt","myFunction","forEach","value","isWaiting","push","menu","resultElements","_c","$RefreshReg$"],"sources":["/Users/user/dig_develop/solo_project/src/components/List.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport \"../styles/list.css\";\n\nexport const URL =\n  process.env.NODE_ENV === \"production\"\n    ? //■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■\n      \"https://choose-lunch-app.onrender.com\"\n    : //■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■ここのリンクを変更すること■■■■■■■■■■■■■■■■■■■■■■\n      \"http://localhost:8080\";\n\nconst List = (props) => {\n  //この関数を実行すると指定したURLにGETリクエストを送る\n  const getDataFunc = async () => {\n    fetch(`${URL}/table`, { method: \"GET\" })\n      .then((res) => res.json())\n      .then((getData) => {\n        props.allMenuSet(getData);\n        //allMenuをgetDataとする\n        //全てのオブジェクトが入った配列\n      });\n  };\n\n  // let patchCheck;\n\n  //これを入れないと永遠にループする\n  useEffect(() => {\n    getDataFunc(props.allMenuSet);\n  }, []);\n  console.log(props.allMenu);\n\n  const menuView = () => {\n    const elementsArr = [\n      <div className=\"method\">\n        Let's choose!!\n        <button id=\"rice\" onClick={riceClickAction}>\n          ごはん\n        </button>\n        <button id=\"pasta\" onClick={pastaClickAction}>\n          パスタ\n        </button>\n        <button id=\"reset\" onClick={resetAction}>\n          全て\n        </button>\n        <button>\n          <img src={randomImage} alt=\"random\" onClick={myFunction} />\n        </button>\n      </div>,\n    ];\n    //allMenuはオブジェクトが入った配列\n    props.allMenu.forEach((value) => {\n      if (value.isWaiting === true) {\n        console.log(value);\n        elementsArr.push(\n          <div className=\"list\" key={value.id}>\n            menu lists\n            <ul>\n              <li>{value.menu}</li>\n            </ul>\n          </div>\n        );\n      }\n    });\n    return elementsArr;\n  };\n  const resultElements = menuView();\n  return resultElements;\n};\nexport default List;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,OAAO,MAAMC,GAAG,GACdC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY;AACjC;AACA,uCAAuC;AACvC;AACA,uBAAuB;AAE7B,MAAMC,IAAI,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACtB;EACA,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9BC,KAAK,CAAE,GAAER,GAAI,QAAO,EAAE;MAAES,MAAM,EAAE;IAAM,CAAC,CAAC,CACrCC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,OAAO,IAAK;MACjBR,KAAK,CAACS,UAAU,CAACD,OAAO,CAAC;MACzB;MACA;IACF,CAAC,CAAC;EACN,CAAC;;EAED;;EAEA;EACAhB,SAAS,CAAC,MAAM;IACdU,WAAW,CAACF,KAAK,CAACS,UAAU,CAAC;EAC/B,CAAC,EAAE,EAAE,CAAC;EACNC,OAAO,CAACC,GAAG,CAACX,KAAK,CAACY,OAAO,CAAC;EAE1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;IACrB,MAAMC,WAAW,GAAG,cAClBpB,OAAA;MAAKqB,SAAS,EAAC,QAAQ;MAAAC,QAAA,GAAC,gBAEtB,eAAAtB,OAAA;QAAQuB,EAAE,EAAC,MAAM;QAACC,OAAO,EAAEC,eAAgB;QAAAH,QAAA,EAAC;MAE5C;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACT7B,OAAA;QAAQuB,EAAE,EAAC,OAAO;QAACC,OAAO,EAAEM,gBAAiB;QAAAR,QAAA,EAAC;MAE9C;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACT7B,OAAA;QAAQuB,EAAE,EAAC,OAAO;QAACC,OAAO,EAAEO,WAAY;QAAAT,QAAA,EAAC;MAEzC;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACT7B,OAAA;QAAAsB,QAAA,eACEtB,OAAA;UAAKgC,GAAG,EAAEC,WAAY;UAACC,GAAG,EAAC,QAAQ;UAACV,OAAO,EAAEW;QAAW;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,CACP;IACD;IACAvB,KAAK,CAACY,OAAO,CAACkB,OAAO,CAAEC,KAAK,IAAK;MAC/B,IAAIA,KAAK,CAACC,SAAS,KAAK,IAAI,EAAE;QAC5BtB,OAAO,CAACC,GAAG,CAACoB,KAAK,CAAC;QAClBjB,WAAW,CAACmB,IAAI,eACdvC,OAAA;UAAKqB,SAAS,EAAC,MAAM;UAAAC,QAAA,GAAgB,YAEnC,eAAAtB,OAAA;YAAAsB,QAAA,eACEtB,OAAA;cAAAsB,QAAA,EAAKe,KAAK,CAACG;YAAI;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnB,CAAC;QAAA,GAJoBQ,KAAK,CAACd,EAAE;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAK9B,CACP,CAAC;MACH;IACF,CAAC,CAAC;IACF,OAAOT,WAAW;EACpB,CAAC;EACD,MAAMqB,cAAc,GAAGtB,QAAQ,CAAC,CAAC;EACjC,OAAOsB,cAAc;AACvB,CAAC;AAAClC,EAAA,CAxDIF,IAAI;AAAAqC,EAAA,GAAJrC,IAAI;AAyDV,eAAeA,IAAI;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}