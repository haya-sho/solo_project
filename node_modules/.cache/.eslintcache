[{"/Users/user/dig_develop/solo_project/src/index.js":"1","/Users/user/dig_develop/solo_project/src/reportWebVitals.js":"2","/Users/user/dig_develop/solo_project/src/App.jsx":"3","/Users/user/dig_develop/solo_project/src/components/List.jsx":"4","/Users/user/dig_develop/solo_project/src/components/Header.jsx":"5"},{"size":754,"mtime":1686140885694,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1686107195461,"results":"8","hashOfConfig":"7"},{"size":513,"mtime":1686202320492,"results":"9","hashOfConfig":"7"},{"size":2951,"mtime":1686202884385,"results":"10","hashOfConfig":"7"},{"size":170,"mtime":1686200717969,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"1k23pi2",{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/user/dig_develop/solo_project/src/index.js",["30"],[],"import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n\n// const knex = require(\"knex\");\n// const knexConfig = require(\"../knexfile\");\n\n// const environment = process.env.DATABASE_URL ? \"production\" : \"development\";\n\n// module.exports = knex(knexConfig[environment]);\n","/Users/user/dig_develop/solo_project/src/reportWebVitals.js",[],[],[],"/Users/user/dig_develop/solo_project/src/App.jsx",[],[],"/Users/user/dig_develop/solo_project/src/components/List.jsx",["31"],[],"import React, { useEffect } from \"react\";\nimport \"../styles/list.css\";\nimport randomImage from \"../img/random.png\";\nexport const URL =\n  process.env.NODE_ENV === \"production\"\n    ? //■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■\n      \"https://choose-lunch-app.onrender.com\"\n    : //■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■ここのリンクを変更すること■■■■■■■■■■■■■■■■■■■■■■\n      \"http://localhost:8080\";\n\nconst List = (props) => {\n  //この関数を実行すると指定したURLにGETリクエストを送る\n  const getDataFunc = async () => {\n    fetch(`${URL}/table`, { method: \"GET\" })\n      .then((res) => res.json())\n      .then((getData) => {\n        props.allMenuSet(getData);\n        //allMenuをgetDataとする\n        //全てのオブジェクトが入った配列\n      });\n  };\n\n  // let patchCheck;\n\n  //これを入れないと永遠にループする\n  useEffect(() => {\n    getDataFunc(props.allMenuSet);\n  }, []);\n  console.log(props.allMenu);\n\n  const myFunction = () => {\n    console.log(\"CLICKED\");\n  };\n  const riceClickAction = () => {\n    console.log(URL);\n    fetch(`${URL}/table/riceIsWaiting`, { method: \"PUT\" })\n      .then((res) => res.json())\n      .then(() => {\n        getDataFunc(props.allMenuSet);\n      });\n  };\n  const pastaClickAction = () => {\n    console.log(URL);\n    fetch(`${URL}/table/pastaIsWaiting`, { method: \"PUT\" })\n      .then((res) => res.json())\n      .then(() => {\n        getDataFunc(props.allMenuSet);\n      });\n  };\n  const resetAction = () => {\n    fetch(`${URL}/table/resetIsWaiting`, { method: \"PUT\" })\n      .then((res) => res.json())\n      .then(() => {\n        getDataFunc(props.allMenuSet);\n      });\n  };\n\n  const menuView = () => {\n    const elementsArr = [\n      <div className=\"method\" key=\"method\">\n        Let's choose!!\n        <button id=\"rice\" onClick={riceClickAction}>\n          ごはん\n        </button>\n        <button id=\"pasta\" onClick={pastaClickAction}>\n          パスタ\n        </button>\n        <button id=\"reset\" onClick={resetAction}>\n          全て\n        </button>\n        <button>\n          <img src={randomImage} alt=\"random\" onClick={myFunction} />\n        </button>\n      </div>,\n    ];\n    //allMenuはオブジェクトが入った配列\n    props.allMenu.forEach((value) => {\n      if (value.isWaiting === true) {\n        console.log(value);\n        elementsArr.push(\n          <div className=\"list\" key={value.id}>\n            menu\n            <ul>\n              <li>{value.menu}</li>\n            </ul>\n          </div>\n        );\n      }\n    });\n\n    return elementsArr;\n  };\n  const resultElements = menuView();\n  return resultElements;\n};\nexport default List;\n","/Users/user/dig_develop/solo_project/src/components/Header.jsx",[],[],{"ruleId":"32","severity":1,"message":"33","line":5,"column":8,"nodeType":"34","messageId":"35","endLine":5,"endColumn":23},{"ruleId":"36","severity":1,"message":"37","line":28,"column":6,"nodeType":"38","endLine":28,"endColumn":8,"suggestions":"39"},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getDataFunc' and 'props.allMenuSet'. Either include them or remove the dependency array.","ArrayExpression",["40"],{"desc":"41","fix":"42"},"Update the dependencies array to be: [getDataFunc, props.allMenuSet]",{"range":"43","text":"44"},[820,822],"[getDataFunc, props.allMenuSet]"]